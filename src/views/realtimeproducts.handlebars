<h2>Agregar nuevo producto</h2>
<form id="productForm">
  <input name="title"       placeholder="Nombre"        required>
  <input name="description" placeholder="Descripción"   required>
  <input name="code"        placeholder="Código"        required>
  <input name="price"       placeholder="Precio"        type="number" required>
  <input name="stock"       placeholder="Stock"         type="number" required>
  <input name="category"    placeholder="Categoría"     required>
  <input name="thumbnails"  placeholder="Thumbnail URL">
  <button type="submit">Agregar</button>
</form>

<h2>Lista de Productos en Tiempo Real</h2>
<ul id="product-list">
  {{#each products}}
    <li>
      {{title}} – {{stock}} unidades – ${{price}}
      <button onclick="deleteProduct('{{_id}}')">Eliminar</button>
      <a href="/products/detalleproduct/{{_id}}"><button>Ver</button></a>
    </li>
  {{/each}}
</ul>

<div class="pagination">
  {{#if hasPrevPage}}
    <a href="/products/realtimeproducts?page={{prevPage}}">Anterior</a>
  {{/if}}
  <span>Pág. {{currentPage}} / {{totalPages}}</span>
  {{#if hasNextPage}}
    <a href="/products/realtimeproducts?page={{nextPage}}">Siguiente</a>
  {{/if}}
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  // CREAR
  document.getElementById('productForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const body = Object.fromEntries(new FormData(e.target));
    body.status = true;
    body.thumbnails = body.thumbnails ? [body.thumbnails] : [];

    const res = await fetch('/api/products', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body),
      credentials: 'include'        // <-- envía la cookie
    });

    if (res.ok) {
      e.target.reset();
      location.reload();
    } else {
      alert(await res.text());
    }
  });

  // ELIMINAR
  async function deleteProduct(id) {
    if (!confirm('¿Eliminar?')) return;
    const res = await fetch(`/api/products/${id}`, {
      method: 'DELETE',
      credentials: 'include'        // <-- envía la cookie
    });
    if (res.ok) location.reload();
    else alert(await res.text());
  }

  // Actualización vía socket (si usas websocket)
  socket.on('updateProducts', () => location.reload());
</script>